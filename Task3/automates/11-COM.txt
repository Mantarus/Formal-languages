# Alphabet
a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9 + - _ / = { } [ ] ( ) < > , . ; : ! @ # $ % ^ & ? * whitespace
# States
empty lb lb_a sym sym_a a_rb
# Init states
empty
# Final states
a_rb
# Transition table
empty ( lb
lb * lb_a
lb_a * sym_a
lb_a a sym
lb_a b sym
lb_a c sym
lb_a d sym
lb_a e sym
lb_a f sym
lb_a g sym
lb_a h sym
lb_a i sym
lb_a j sym
lb_a k sym
lb_a l sym
lb_a m sym
lb_a n sym
lb_a o sym
lb_a p sym
lb_a q sym
lb_a r sym
lb_a s sym
lb_a t sym
lb_a u sym
lb_a v sym
lb_a w sym
lb_a x sym
lb_a y sym
lb_a z sym
lb_a A sym
lb_a B sym
lb_a C sym
lb_a D sym
lb_a E sym
lb_a F sym
lb_a G sym
lb_a H sym
lb_a I sym
lb_a J sym
lb_a K sym
lb_a L sym
lb_a M sym
lb_a N sym
lb_a O sym
lb_a P sym
lb_a Q sym
lb_a R sym
lb_a S sym
lb_a T sym
lb_a U sym
lb_a V sym
lb_a W sym
lb_a X sym
lb_a Y sym
lb_a Z sym
lb_a 0 sym
lb_a 1 sym
lb_a 2 sym
lb_a 3 sym
lb_a 4 sym
lb_a 5 sym
lb_a 6 sym
lb_a 7 sym
lb_a 8 sym
lb_a 9 sym
lb_a + sym
lb_a - sym
lb_a _ sym
lb_a / sym
lb_a = sym
lb_a { sym
lb_a } sym
lb_a [ sym
lb_a ] sym
lb_a ( sym
lb_a ) sym
lb_a < sym
lb_a > sym
lb_a , sym
lb_a . sym
lb_a ; sym
lb_a : sym
lb_a ! sym
lb_a @ sym
lb_a # sym
lb_a $ sym
lb_a % sym
lb_a ^ sym
lb_a & sym
lb_a ? sym
lb_a whitespace sym
sym a sym
sym b sym
sym c sym
sym d sym
sym e sym
sym f sym
sym g sym
sym h sym
sym i sym
sym j sym
sym k sym
sym l sym
sym m sym
sym n sym
sym o sym
sym p sym
sym q sym
sym r sym
sym s sym
sym t sym
sym u sym
sym v sym
sym w sym
sym x sym
sym y sym
sym z sym
sym A sym
sym B sym
sym C sym
sym D sym
sym E sym
sym F sym
sym G sym
sym H sym
sym I sym
sym J sym
sym K sym
sym L sym
sym M sym
sym N sym
sym O sym
sym P sym
sym Q sym
sym R sym
sym S sym
sym T sym
sym U sym
sym V sym
sym W sym
sym X sym
sym Y sym
sym Z sym
sym 0 sym
sym 1 sym
sym 2 sym
sym 3 sym
sym 4 sym
sym 5 sym
sym 6 sym
sym 7 sym
sym 8 sym
sym 9 sym
sym + sym
sym - sym
sym _ sym
sym / sym
sym = sym
sym { sym
sym } sym
sym [ sym
sym ] sym
sym ( sym
sym ) sym
sym < sym
sym > sym
sym , sym
sym . sym
sym ; sym
sym : sym
sym ! sym
sym @ sym
sym # sym
sym $ sym
sym % sym
sym ^ sym
sym & sym
sym ? sym
sym whitespace sym
sym * sym_a
sym_a a sym
sym_a b sym
sym_a c sym
sym_a d sym
sym_a e sym
sym_a f sym
sym_a g sym
sym_a h sym
sym_a i sym
sym_a j sym
sym_a k sym
sym_a l sym
sym_a m sym
sym_a n sym
sym_a o sym
sym_a p sym
sym_a q sym
sym_a r sym
sym_a s sym
sym_a t sym
sym_a u sym
sym_a v sym
sym_a w sym
sym_a x sym
sym_a y sym
sym_a z sym
sym_a A sym
sym_a B sym
sym_a C sym
sym_a D sym
sym_a E sym
sym_a F sym
sym_a G sym
sym_a H sym
sym_a I sym
sym_a J sym
sym_a K sym
sym_a L sym
sym_a M sym
sym_a N sym
sym_a O sym
sym_a P sym
sym_a Q sym
sym_a R sym
sym_a S sym
sym_a T sym
sym_a U sym
sym_a V sym
sym_a W sym
sym_a X sym
sym_a Y sym
sym_a Z sym
sym_a 0 sym
sym_a 1 sym
sym_a 2 sym
sym_a 3 sym
sym_a 4 sym
sym_a 5 sym
sym_a 6 sym
sym_a 7 sym
sym_a 8 sym
sym_a 9 sym
sym_a + sym
sym_a - sym
sym_a _ sym
sym_a / sym
sym_a = sym
sym_a { sym
sym_a } sym
sym_a [ sym
sym_a ] sym
sym_a ( sym
sym_a < sym
sym_a > sym
sym_a , sym
sym_a . sym
sym_a ; sym
sym_a : sym
sym_a ! sym
sym_a @ sym
sym_a # sym
sym_a $ sym
sym_a % sym
sym_a ^ sym
sym_a & sym
sym_a ? sym
sym_a whitespace sym
sym_a * sym_a
sym_a ) a_rb